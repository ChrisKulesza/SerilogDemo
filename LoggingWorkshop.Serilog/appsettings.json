{
  // Log configuration. We use serilog. Read more at
  // https://github.com/serilog/serilog-settings-configuration.
  "Serilog": {
    // Determine where to log
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File" ],
    // Set the minimum logging level
    "MinimumLevel": {
      "Default": "Information",
      // Overwrite the Microsoft loggings
      "Override": {
        "Microsoft": "Warning",
        "Microsoft.Hosting.Lifetime": "Warning"
      }
    },
    "LevelSwitches": {
        "$consoleSwitch": "Verbose",
        "$fileSwitch": "Verbose"
    },
    // Where do we want to write our logs to? Choose from a large number of sinks:
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "theme": "Serilog.Sinks.SystemConsole.Themes.SystemConsoleTheme::Colored, Serilog.Sinks.Console",
          "outputTemplate": "[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj} <s:{SourceContext}>{NewLine}{Exception}",
          "levelSwitch": "$consoleSwitch"
        }
      },
      {
        "Name": "File",
        "Args": {
          "path": "Logs/log.log",
          // Time after which a new file is created.
          "RollingInterval": "Day",
          "levelSwitch": "$fileSwitch"
        }
      },
      // Listen with Seq (Log Analyser) to port 5341
      {
        "Name": "Seq",
        "Args": { "serverUrl": "http://localhost:5341" }
      }
    ],
    "Enrich": [ "FromLogContext", "WithMachineName", "WithThreadId" ],
    "Properties": {
      "Application": "WebApiSerilogDemo"
    }
  },
  "AllowedHosts": "*"
}
